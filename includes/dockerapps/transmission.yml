#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_prompt:
    - name: provider
      prompt: "OPENVPN_PROVIDER"
      private: no
    - name: username
      prompt: "OPENVPN_USERNAME"
      private: no
    - name: password
      prompt: "OPENVPN_PASSWORD"
      private: no
    - name: config
      prompt: "OPENVPN_CONFIG (Nom fichier sans la terminaison opvn)"
      private: no
    - name: network
      prompt: "LOCAL_NETWORK (ex 192.168.1.0/24)"
      private: no
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: create transmission state
      shell: |
        echo "1" > /opt/seedbox/status/transmission

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
      register: check

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub.transmission is undefined)
            or
            (sub.transmission is none)
            or
            (sub.transmission | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: "{{sub.transmission if sub_enabled else 'transmission'}}"
      when: cloudflare_enabled

    - name: 'Creating transmission folder paths'
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/home/{{user.name}}/local/transmission'

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'transmission'
        image: 'haugene/transmission-openvpn:latest'

    # LABELS ######################################################################
    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          ## HTTP Routers
          traefik.http.routers.transmission-rtr.entrypoints: 'https'
          traefik.http.routers.transmission-rtr.rule: 'Host(`{{sub.transmission if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.transmission-rtr.tls: 'true'
          ## Middlewares
          traefik.http.routers.transmission-rtr.middlewares: "{{ 'chain-authelia@file' if check.stat.exists | default(false) else 'chain-oauth@file' if oauth_enabled | default(false) else 'chain-basic-auth@file' }}"
          ## HTTP Services
          traefik.http.routers.transmission-rtr.service: 'transmission-svc'
          traefik.http.services.transmission-svc.loadbalancer.server.port: '9091'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/seedbox/docker/{{user.name}}/transmission/data:/data'
          - '/opt/seedbox/docker/{{user.name}}/transmission/config:/config'
          - '/etc/localtime:/etc/localtime:ro'
          - '/home/{{user.name}}:/home/{{user.name}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'
          CREATE_TUN_DEVICE: 'true'
          OPENVPN_PROVIDER: '{{provider}}'
          OPENVPN_USERNAME: '{{username}}'
          OPENVPN_PASSWORD: '{{password}}'
          OPENVPN_CONFIG: '{{config}}'
          LOCAL_NETWORK: '{{network}}'
          OPENVPN_OPTS: '--inactive 3600 --ping 10 --ping-exit 60'
          TRANSMISSION_DOWNLOAD_DIR: '/home/{{user.name}}/transmission'
          TZ: 'Europe/Paris'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        capabilities:
          - 'NET_ADMIN'
        sysctls: 'net.ipv6.conf.all.disable_ipv6=0'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
        state: started
        labels: '{{pg_labels}}'

    - debug:
        msg: Une fois l'installation terminÃ©e, il faut patienter environ 5 mn pour l'interface Webui soit dispo !!

    - name: Prendre connaissance du message ci dessus
      wait_for:
        timeout: 10

    - name: add resume file
      shell: |
        echo "{{pgrole}}-{{sub.transmission if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt

    - name: create transmission state
      shell: |
        echo "2" > /opt/seedbox/status/transmission


