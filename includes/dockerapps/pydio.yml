#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: create pydio state
      shell: |
        echo "1" > /opt/seedbox/status/pydio

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
      register: check

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub.pydio is undefined)
            or
            (sub.pydio is none)
            or
            (sub.pydio | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: "{{sub.pydio if sub_enabled else 'pydio'}}"
      when: cloudflare_enabled

    - name: Create pydio-net network
      docker_network:
        name: 'pydio-net'
        state: present

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'pydio'
        image: 'pydio/cells'
    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'

    # LABELS ######################################################################
    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          ## HTTP Routers
          traefik.http.routers.pydio-rtr.entrypoints: 'https'
          traefik.http.routers.pydio-rtr.rule: 'Host(`{{sub.pydio if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.pydio-rtr.tls: 'true'
          ## Middlewares
          traefik.http.routers.pydio-rtr.middlewares: "{{ 'chain-authelia@file' if check.stat.exists | default(false) else 'chain-oauth@file' if oauth_enabled | default(false) else 'chain-basic-auth@file' }}"
          ## HTTP Services
          traefik.http.routers.pydio-rtr.service: 'pydio-svc'
          traefik.http.services.pydio-svc.loadbalancer.server.port: '80'

    ## volumes docker
    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes: 
          - '/opt/seedbox/docker/{{user.name}}/pydio:/var/cells'
          - '/opt/seedbox/docker/{{user.name}}/pydio/data:/var/cells/data'
          - '/home/{{user.name}}:/home/{{user.name}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          CELLS_BIND: 'pydio.{{user.domain}}:80'
          CELLS_EXTERNAL: 'https://pydio.{{user.domain}}'
          CELLS_NO_TLS: '1'

    - name: 'Deploying db-pydio'
      docker_container:
        name: 'db-pydio'
        image: 'mysql:5.7'
        pull: yes
        env:
          MYSQL_DATABASE: 'pydio'
          MYSQL_USER: 'pydio'
          MYSQL_PASSWORD: 'pydio'
          MYSQL_ROOT_PASSWORD: 'pydio'
          command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart_policy: always
        networks:
          - name: 'pydio-net'
        state: started

    - name: Wait for 10 seconds before continuing
      wait_for:
        timeout: 10

    - name: 'Deploying pydio'
      docker_container:
        name: 'pydio'
        image: '{{image}}'
        pull: yes
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
          - name: 'pydio-net'
        state: started
        labels: '{{pg_labels}}'

    - name: add resume file
      shell: |
        echo "{{pgrole}}-{{sub.pydio if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt

    - name: create pydio state
      shell: |
        echo "2" > /opt/seedbox/status/pydio


