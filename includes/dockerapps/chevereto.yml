#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: create chevereto state
      shell: |
        echo "1" > /opt/seedbox/status/chevereto

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
      register: check

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub.chevereto is undefined)
            or
            (sub.chevereto is none)
            or
            (sub.chevereto | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: "{{sub.chevereto if sub_enabled else 'chevereto'}}"
      when: cloudflare_enabled

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'chevereto'
        image: 'nmtan/chevereto:latest'

    - name: Create chevereto-net network
      docker_network:
        name: chevereto-net
        state: present

    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'
        - '/home/{{user.name}}/local/images'

    - name: 'Touch php.ini'
      file:
        path: /opt/seedbox/docker/{{user.name}}/{{pgrole}}/chevereto-php.ini
        state: touch

    - name: 'Insert php.ini'
      blockinfile:
        path: /opt/seedbox/docker/{{user.name}}/{{pgrole}}/chevereto-php.ini
        block: |
          file_uploads = On
          memory_limit = 256M
          upload_max_filesize = 100M
          post_max_size = 100M
          max_execution_time = 600

    # LABELS #######################################################################
    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          ## HTTP Routers
          traefik.http.routers.chevereto-rtr.entrypoints: 'https'
          traefik.http.routers.chevereto-rtr.rule: 'Host(`{{sub.chevereto if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.chevereto-rtr.tls: 'true'
          ## Middlewares
          traefik.http.routers.chevereto-rtr.middlewares: "{{ 'chain-authelia@file' if check.stat.exists | default(false) else 'chain-oauth@file' if oauth_enabled | default(false) else 'chain-basic-auth@file' }}"
          ## HTTP Services
          traefik.http.routers.chevereto-rtr.service: 'chevereto-svc'
          traefik.http.services.chevereto-svc.loadbalancer.server.port: '80'

    - name: 'Deploying db-chevereto'
      docker_container:
        name: 'db-chevereto'
        recreate: true
        image: 'mariadb'
        pull: yes
        volumes:
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/db-chevereto:/var/lib/mysql:rw'
        env:
          MYSQL_ROOT_PASSWORD: 'chevereto'
          MYSQL_PASSWORD: 'chevereto'
          MYSQL_DATABASE: 'chevereto'
          MYSQL_USER: 'chevereto'
        networks:
          - name: traefik_proxy

    - name: Wait for 10 seconds before continuing
      wait_for:
        timeout: 10

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/home/{{user.name}}/local/images:/var/www/html/images'
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/chevereto-php.ini:/usr/local/etc/php/conf.d/chevereto-php.ini'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          CHEVERETO_DB_HOST: 'db-chevereto'
          CHEVERETO_DB_USERNAME: 'chevereto'
          CHEVERETO_DB_PASSWORD: 'chevereto'
          CHEVERETO_DB_NAME: 'chevereto'
          CHEVERETO_DB_PREFIX: 'chv_'

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: always
        networks:
          - name: traefik_proxy
          - name: chevereto-net
        state: started
        labels: '{{pg_labels}}'

    - name: 'permissions'
      shell: | 
        chmod -R 766 /home/{{user.name}}/local/images
        chown -R 33:33 /home/{{user.name}}/local/images

    - name: add resume file
      shell: |
        echo "{{pgrole}}-{{sub.chevereto if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt

    - name: create chevereto state
      shell: |
        echo "2" > /opt/seedbox/status/chevereto

