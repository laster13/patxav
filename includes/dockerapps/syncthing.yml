#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: create syncthing state
      shell: |
        echo "1" > /opt/seedbox/status/syncthing

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
      register: check

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub.syncthing is undefined)
            or
            (sub.syncthing is none)
            or
            (sub.syncthing | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: "{{sub.syncthing if sub_enabled else 'syncthing'}}"
      when: cloudflare_enabled

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'syncthing'
        intport: '8384'
        extport: '8384'
        intport2: '22000'
        extport2: '22000'
        intport3: '21027'
        extport3: '21027'
        image: 'linuxserver/syncthing'

    # EXTRA FOR RUTORRENT #########################################################
    - name: 'Create {{pgrole}} script directories'
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}} recurse=yes'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/sync'
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config'

    # LABELS ######################################################################
    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          ## HTTP Routers
          traefik.http.routers.syncthing-rtr.entrypoints: 'https'
          traefik.http.routers.syncthing-rtr.rule: 'Host(`{{sub.syncthing if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.syncthing-rtr.tls: 'true'
          ## Middlewares
          traefik.http.routers.syncthing-rtr.middlewares: "{{ 'chain-authelia@file' if check.stat.exists | default(false) else 'chain-oauth@file' if oauth_enabled | default(false) else 'chain-basic-auth@file' }}"
          ## HTTP Services
          traefik.http.routers.syncthing-rtr.service: 'syncthing-svc'
          traefik.http.services.syncthing-svc.loadbalancer.server.port: '8384'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config:/config'
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/sync:/sync'
          - '/home/{{user.name}}:/home/{{user.name}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'

    # MAIN DEPLOYMENT #############################################################
    - name: xmlcheck
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config/config.xml'
      register: xmlcheck

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{extport}}:{{intport}}'
          - '{{extport2}}:{{intport2}}'
          - '{{extport3}}:{{intport3}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
        state: started
        labels: '{{pg_labels}}'

    # ENDING TASK FOR RUTORRENT ####################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: 'Wait 10 Seconds'
          wait_for:
            timeout: 10

        - name: Replace default sync path in config file
          replace:
            path: /opt/seedbox/docker/{{user.name}}/{{pgrole}}/config/config.xml
            regexp: <defaultFolderPath>~</defaultFolderPath>
            replace: '<defaultFolderPath>/sync</defaultFolderPath>'

      when: not xmlcheck.stat.exists

    - name: add resume file
      shell: |
        echo "{{pgrole}}-{{sub.syncthing if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt

    - name: create syncthing state
      shell: |
        echo "2" > /opt/seedbox/status/syncthing


