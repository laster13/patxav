#!/bin/bash

---
    - hosts: localhost
      gather_facts: false
      vars_files:
        - /opt/seedbox/variables/account.yml
      tasks:

        - name: create komga state
          shell: |
            echo "1" > /opt/seedbox/status/komga

        - name: Checking for existing app data
          stat:
            path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
          register: check

        - name: "Variables | Set 'cloudflare_enabled' variable"
          set_fact:
            cloudflare_enabled: "{{ true if not(
                (cloudflare.login is undefined)
                or
                (cloudflare.login is none)
                or
                (cloudflare.login | trim | length == 0)
                or
                (cloudflare.api is undefined)
                or
                (cloudflare.api is none)
                or
                (cloudflare.api | trim | length == 0)
              )
                else false }}"
    
        - name: "Variables | Set 'oauth_enabled' variable"
          set_fact:
            oauth_enabled: "{{ true if not(
                (oauth.client is undefined)
                or
                (oauth.client is none)
                or
                (oauth.client | trim | length == 0)
                or
                (oauth.secret is undefined)
                or
                (oauth.secret is none)
                or
                (oauth.secret | trim | length == 0)
                or
                (oauth.account is undefined)
                or
                (oauth.account is none)
                or
                (oauth.account | trim | length == 0)
              )
                else false }}"

        - name: "Variables | Set 'sub' variable"
          set_fact:
            sub_enabled: "{{ true if not(
                (sub.komga is undefined)
                or
                (sub.komga is none)
                or
                (sub.komga | trim | length == 0)
              )
                else false }}"

        - name: "Set DNS Record on CloudFlare"
          include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
          vars:
            subdomain: "{{sub.komga if sub_enabled else 'komga'}}"
          when: cloudflare_enabled
    
        - name: 'Set Known Facts'
          set_fact:
            pgrole: 'komga'
            intport: '8080'
            image: 'gotson/komga:latest'
    
        - name: Creating paths
          file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
          with_items:
            - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'
    
        # LABELS ######################################################################
        - name: 'Ajout label traefik'
          set_fact:
            pg_labels:
              traefik.enable: 'true'
              ## HTTP Routers
              traefik.http.routers.komga-rtr.entrypoints: 'https'
              traefik.http.routers.komga-rtr.rule: 'Host(`{{sub.komga if sub_enabled else pgrole}}.{{user.domain}}`)'
              traefik.http.routers.komga-rtr.tls: 'true'
              ## Middlewares
              traefik.http.routers.komga-rtr.middlewares: "{{ 'chain-authelia@file' if check.stat.exists | default(false) else 'chain-oauth@file' if oauth_enabled | default(false) else 'chain-basic-auth@file' }}"
              ## HTTP Services
              #traefik.http.routers.komga-rtr.tls.certresolver: 'dns-cloudflare' 
              traefik.http.routers.komga-rtr.service: 'komga-svc'
              traefik.http.services.komga-svc.loadbalancer.server.port: '8080'

    
        - name: 'Setting PG Volumes'
          set_fact:
            pg_volumes:
              - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config:/config'
              - '/home/{{user.name}}/Medias/books:/books'
              - '/etc/localtime:/etc/localtime:ro'

        - name: 'Setting PG ENV'
          set_fact:
            pg_env:
              UID: '{{user.userid}}'
              GID: '{{user.groupid}}'
              spring.profiles.active: 'claim'
    
        # MAIN DEPLOYMENT #############################################################
    
        - name: 'Deploying {{pgrole}}'
          docker_container:
            name: '{{pgrole}}'
            image: '{{image}}'
            pull: yes
            volumes: '{{pg_volumes}}'
            env: '{{pg_env}}'
            restart_policy: unless-stopped
            networks:
              - name: traefik_proxy
            state: started
            labels: '{{pg_labels}}'

        - name: add resume file
          shell: |
            echo "{{pgrole}}-{{sub.komga if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt

        - name: create komga state
          shell: |
            echo "2" > /opt/seedbox/status/komga

